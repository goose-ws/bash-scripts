# IP address where the Plex Media Server can be reached
# If Plex is in Docker, this can be 'docker:container-name' to automatically find the container's IP address
# For example, plexIp="docker:plex"
# If it's a host based (or remote?) system, you can directly input the IP address
# For example, plexIp="127.0.0.1"
# If the IP address could be dynamic, or you want to obtain it some other way (e.g. your Plex runs in Kube),
# you can set it to a subshell that should return only the bare IP address
# For example, plexIp="$(dig +short 'some.domain.name')" --or-- plexIp="$(kubectl -n media get svc/plex -ojson)"
## This is a string
plexIp="docker:plex"

# Plex Scheme (Probably http)
## This is a string
plexScheme="http"

# Plex Port (Probably 32400)
## This is a string
plexPort="32400"

# Plex Access Token - If you don't know what this is, here is how to find it:
# https://support.plex.tv/articles/204059436-finding-an-authentication-token-x-plex-token/
## This is a string
plexToken=""

# If you would like to ignore an entire library, add its library ID here
# The library ID is shown when running the script in 'Verbose' mode
## This is an array
ignoreLibraries=()

# If you would like to ignore an entire series, add its rating key ID here
# The rating key is shown when running the script in 'Verbose' mode
## This is an array
ignoreSeries=()

# If you would like to ignore an entire season of a series, add its rating key here
# The rating key is shown when running the script in 'Verbose' mode
## This is an array
ignoreSeasons=()

# If you would like to ignore specific files, add their rating keys here
# The rating key is shown when running the script in 'Verbose' mode
## This is an array
ignoreEpisodes=()

# Are we allowed to check for and notify of updates each time the script runs?
# Can be "Yes" "No" "True" "False"
## This is a string
updateCheck="Tes"

# How verbose do you want the output to be
# 1 = Errors only
# 2 = Warnings
# 3 = Informational
# 4 = Verbose
# 5 = Debug
## This is a string
outputVerbosity="3"

# If you want to send a Telegram message notifying of renamed items, fill them out.
# Telegram bot API key, obtained from @BotFather
## This is a string
telegramBotId=""

# Telegram channel ID, if you don't know how to get this, use these instructions:
# https://gist.github.com/goose-ws/1c82c98ac4701af433eb5c7562109e51
## This is an array, so you can do multiple channels if you want.
# Format is: ("-100xxxxxxx2" "-100xxxxxxx1")
# Modifiers include threads for super groups, and silent notifications.
# If sending to a super group thread, you can specify the thread by adding '&message_thread_id=[int]',
# where [int] is the interger of the thread ID. (e.g. "-100xxxxxxxxx1&message_thread_id=12")
# For silent notifications, you can add the modifier '&silent=true' (e.g. "-100xxxxxxxxx1&silent=true")
## This is an array
telegramChannelId=()

# Do you want to send a Telegram message for script errors? Beware, the script is not capable of checking
# to see if an error message has already been sent, so depending on your cron settings this could become
# very spammy. Can be "Yes" "No" "True" "False"
## This is a string
telegramErrorMessages=""

# If you enabled Telegram messages for script errors, you can define a different channel for errors to
# be sent to, instead of the ones defined in the 'telegramChannelId' array above. This can only be a single
# channel, not an array. If you leave this blank, and have error messages enabled, then they will send to
# all channels in the 'telegramChannelId' array above.
## This is a string
telegramErrorChannel=""
