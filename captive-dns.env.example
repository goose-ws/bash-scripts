# CIDR range for the Primary and Secondary DNS host(s)
allowedDNS="10.10.10.0/24"

# Primary DNS server IP address
primaryDNS="10.10.10.10"

# Secondary DNS server IP address
# If you do not have a secondary DNS server, you can leave this blank
secondaryDNS="10.10.10.11"

# Tertiary DNS resolver to use if both Primary/Secondary DNS providers are down
# This should probably be something outside your network
tertiaryDNS="9.9.9.9"

# The port that should be used for DNS lookups, should be default (53) in almost all scenarios
dnsPort="53"

# Domain you want to look up to test if captive DNS is working or not
testDomain="quad9.net"

# Array of VLAN's you want to force to use captive DNS
# Your default vlan0 is "br0", vlan2 is "br2", vlan1010 is "br1010", etc.
vlanInterfaces=("br0" "br2" "br3" "br4" "br5" "br99")

# Are we allowed to check for and notify of updates each time the script runs?
# Can be "Yes" "No" "True" "False"
updateCheck="Yes"

# How verbose should our output be?
# Possible values:
# 1 - Error only
# 2 - Informational
# 3 - Verbose
outputVerbosity="2"

### If you want Telegram notifications anytime this script takes action, fill these fields out
### If you don't want Telegram notifications, you can safely leave these blank

# Telegram bot API key, obtained from @BotFather
telegramBotId=""

# Telegram channel ID, if you don't know how to get this, use these instructions:
# https://gist.github.com/goose-ws/1c82c98ac4701af433eb5c7562109e51
telegramChannelId=""

# IP address of Telegram API server, in case the hostname cannot be resolved.
# You can find this with the command: dig +short -q a api.telegram.org
# If you really don't want to use an IP address, you can set it to "api.telegram.org"
telegramAddr="149.154.167.220"