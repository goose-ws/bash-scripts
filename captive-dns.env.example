# CIDR range for the Primary and Secondary DNS host(s)
allowedDNS="10.10.10.0/24"

# Primary DNS server IP address
primaryDNS="10.10.10.10"

# Secondary DNS server IP address
# If you do not have a secondary DNS server, you can leave this blank
secondaryDNS="10.10.10.11"

# Tertiary DNS resolver to use if both Primary/Secondary DNS providers are down
# This should probably be something outside your network
tertiaryDNS="9.9.9.9"

# The port that should be used for DNS lookups, should be default (53) in almost all scenarios
dnsPort="53"

# Domain you want to look up to test if captive DNS is working or not
testDomain="quad9.net"

# Array of VLAN's you want to force to use captive DNS
# Your default vlan0 is "br0", vlan2 is "br2", vlan1010 is "br1010", etc.
vlanInterfaces=("br0" "br2" "br3" "br4" "br5" "br99")

# Are we allowed to check for and notify of updates each time the script runs?
# Can be "Yes" "No" "True" "False"
updateCheck="Yes"

# How verbose should our output be?
# Possible values:
# 1 - Error only
# 2 - Informational
# 3 - Verbose
outputVerbosity="2"

## Optional

# If you want to send a Telegram message notifying of DNS updates, fill these out.
# Telegram bot API key, obtained from @BotFather
telegramBotId=""

# Telegram channel ID, if you don't know how to get this, use these instructions:
# https://gist.github.com/goose-ws/1c82c98ac4701af433eb5c7562109e51
# This is an array, so you can do multiple channels if you want.
# Format is: ("-100xxxxxxx2" "-100xxxxxxx1")
# Modifiers include threads for super groups, and silent notifications.
# If sending to a super group thread, you can specify the thread by adding '&message_thread_id=[int]',
# where [int] is the interger of the thread ID. (e.g. "-100xxxxxxxxx1&message_thread_id=12")
# For silent notifications, you can add the modifier '&silent=true' (e.g. "-100xxxxxxxxx1&silent=true")
telegramChannelId=("")

# IP address of Telegram API server, in case the hostname cannot be resolved.
# You can find this with the command: dig +short -q a api.telegram.org
# If you really don't want to use an IP address, you can set it to "api.telegram.org"
telegramAddr="149.154.167.220"

# Do you want to send a Telegram message for script errors? Beware, the script is not capable of checking
# to see if an error message has already been sent, so depending on your cron settings this could become
# very spammy. Can be "Yes" "No" "True" "False"
telegramErrorMessages="No"

# If you enabled Telegram messages for script errors, you can define a different channel for errors to
# be sent to, instead of the ones defined in the 'telegramChannelId' array above. This can only be a single
# channel, not an array. If you leave this blank, and have error messages enabled, then they will send to
# all channels in the 'telegramChannelId' array above.
telegramErrorChannel=""
