# Plex token.
# Taken from https://support.plex.tv/articles/204059436-finding-an-authentication-token-x-plex-token/ -  You can find it via:
# 1. Sign in to your Plex account in Plex Web App
# 2. Browse to a library item and view the XML for it
# 3. Look in the address bar and find the token as the X-Plex-Token value
#
# It will appear like:
# http://localhost:32400/?X-Plex-Token=YOURTOKENVALUEHERE
# http://localhost:32400/library/sections/1?X-Plex-Token=YOURTOKENVALUEHERE
# http://192.168.1.12:32400/library/metadata/147?X-Plex-Token=YOURTOKENVALUEHERE
#
plexAccessToken=""

# Plex Port, probably 32400
# TODO: Figure out a way to get this from a Plex config file..somewhere? Can't find it on a cursory search.
plexPort="32400"

# Plex Scheme, probably http
# TODO: Figure out a way to get this from a Plex config file..somewhere? Can't find it on a cursory search.
plexScheme="http"

# Which channel version to update from (plexpass, beta, or public)
plexVersion="public"

# Docker container name
containerName="plex"

# The script will attempt to determine the IP address of the container on its own. If it fails, please file an
# issue with some details so I can look in to why. But as a workaround, you can uncomment this variable and
# define the IP address yourself
#containerIp="127.0.0.1"

# Host OS
# TODO: Automate this variable via 'uname'
# 1 = Windows
# 2 = MacOS
# 3 = Linux
# 4 = FreeBSD
# 5 = nas
# 6 = Netgear
# 7 = QNAP
# 8 = unRAID
# 9 = Drobo
# 10 = ASUSTOR
# 11 = Seagate
# 12 = Western Digital
# 13 = Western Digital (OS 3)
hostOS="3"

# Do you want to run ChuckPA's Plex Database Repair Tool in between upgrades?
# Can be "Yes" "No" "True" "False"
# https://github.com/ChuckPa/PlexDBRepair
repairDatabase="No"

# If you're spawning via cron, we can add an optional sleep when the script is spawned but before we start executing calls, 
# to prevent our actions from appearing too programatic. If you want to do this, set a maximum sleep time (in seconds), and
# a sleep timer will be set for a random number between 1 and your maximum number. Note that this can be longer than your cron
# interval, because the script will not run if the lockfile is present. So let's sa yyou can run the script hourly via cron,
# but set the max sleep for 2 hours. The script spawns at 13:00 and picks a random sleeps for 68 minutes. At 14:00 the script
# spawns, but the lockfile is present, so that spawn exits.
# Leave this blank to disable it.
cronSleep="900"

# Are we allowed to check for and notify of updates each time the script runs?
# Can be "Yes" "No" "True" "False"
updateCheck="Yes"

# How verbose do you want the output to be
# 1 = Errors only
# 2 = Warnings
# 3 = Informational
# 4 = Verbose
## This is a string
outputVerbosity="3"

## Optional

# If you want to send a Discord message notfying of downloaded items, provide a webhook URL
discordWebhook=""

# If you want to send a Telegram message notifying of server updates, fill these out.
# Telegram bot API key, obtained from @BotFather
telegramBotId=""

# Telegram channel ID, if you don't know how to get this, use these instructions:
# https://gist.github.com/goose-ws/1c82c98ac4701af433eb5c7562109e51
# This is an array, so you can do multiple channels if you want.
# Format is: ("-100xxxxxxx2" "-100xxxxxxx1")
# Modifiers include threads for super groups, and silent notifications.
# If sending to a super group thread, you can specify the thread by adding '&message_thread_id=[int]',
# where [int] is the interger of the thread ID. (e.g. "-100xxxxxxxxx1&message_thread_id=12")
# For silent notifications, you can add the modifier '&silent=true' (e.g. "-100xxxxxxxxx1&silent=true")
telegramChannelId=("")

# Do you want to send a Telegram message for script errors? Beware, the script is not capable of checking
# to see if an error message has already been sent, so depending on your cron settings this could become
# very spammy. Can be "Yes" "No" "True" "False"
telegramErrorMessages="No"

# If you enabled Telegram messages for script errors, you can define a different channel for errors to
# be sent to, instead of the ones defined in the 'telegramChannelId' array above. This can only be a single
# channel, not an array. If you leave this blank, and have error messages enabled, then they will send to
# all channels in the 'telegramChannelId' array above.
telegramErrorChannel=""
