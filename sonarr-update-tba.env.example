# The Sonarr instances you want to interact with. 
# If you are running Sonarr via Docker, you can use 'docker:<container_name>' to let the script automatically figure out the IP address
#   e.g. if your container name is 'sonarr', then containerIp=("docker:sonarr")
#   For multiple Sonarr instances, just add additional array items, e.g. containerIp=("docker:sonarr" "docker:sonarr-4k")
# If your instance is hosted on your system, you could just provide a direct IPv4 address, assuming it is valid/static
#   e.g. if your instance is reachable via localhost, then containerIp=("127.0.0.1")
#   Currently multiple Sonarr instances outside of Docker are unsupported. If you have multiple instances running on your host, create
#   an issue and I'll try and motivate myself to add support for your situation.
## This is an array
containerIp=("docker:sonarr" "docker:sonarr-4k")

# If your Sonarr instance is not provided via Docker, you must uncomment the below variable and point to where your 'config.xml' for Sonarr is
## This is a string
#sonarrConfig="/path/to/your/sonarr/config.xml"

# Are we allowed to check for and notify of updates each time the script runs?
# Can be "Yes" "No" "True" "False"
## This is a string
updateCheck="Yes"

# How verbose should our output be?
# Possible values:
# 1 - Error only
# 2 - Informational
# 3 - Verbose
## This is a string
outputVerbosity="2"

# If you have entire libraries you want to ignore, you can run the script with verbose output, and watch for the
# line "Detected [int] libraries", then put the correspnding library ID into this array to have it ignored on future runs.
# If you have multiple Sonarr containers running in Docker, you should prefix the ID with the container
# you want it to correspond to, for example instead of:
#     ignoreLibraryArr=("123")
# you would do:
#     ignoreLibraryArr=("docker:sonarr:123")
## This is an array
ignoreLibrary=()

# If you have entire series you want to ignore, you can run the script with verbose output, and watch for the
# line "Found series ID:", then put the series ID into this array to have it ignored on future runs.
# If you have multiple Sonarr containers running in Docker, you should prefix the ID with the container
# you want it to correspond to, for example instead of:
#     ignoreSeries=("456")
# you would do:
#     ignoreSeries=("docker:sonarr:456")
## This is an array
ignoreSeries=()

# If you have files you want to ignore, you can run the script with verbose output, and watch for the
# line "Found episode ID:", then put the episode ID into this array to have it ignored on future runs.
# If you have multiple Sonarr containers running in Docker, you should prefix the ID with the container
# you want it to correspond to, for example instead of:
#     ignoreEpisodes=("789")
# you would do:
#     ignoreEpisodes=("docker:sonarr:789")
## This is an array
ignoreEpisodes=()

### Optional
# If you want to search Plex for TBA items and refresh their metadata, uncomment and fill in your
# Plex Container IP address (can use 'docker:container_name', as above, if it's run as a docker container)
# Plex Scheme (Probably http)
# Plex Port (Probably 32400)
# Plex Access Token - If you don't know what this is, here is how to find it:
# https://support.plex.tv/articles/204059436-finding-an-authentication-token-x-plex-token/
## These four are strings
plexContainerIp="docker:plex"
plexScheme="http"
plexPort="32400"
plexToken=""

# If you want to send a Telegram message notifying of renamed items, fill them out.
# Telegram bot API key, obtained from @BotFather
## This is a string
telegramBotId=""

# Telegram channel ID, if you don't know how to get this, use these instructions:
# https://gist.github.com/goose-ws/1c82c98ac4701af433eb5c7562109e51
## This is an array, so you can do multiple channels if you want.
# Format is: ("-100xxxxxxx2" "-100xxxxxxx1")
# Modifiers include threads for super groups, and silent notifications.
# If sending to a super group thread, you can specify the thread by adding '&message_thread_id=[int]',
# where [int] is the interger of the thread ID. (e.g. "-100xxxxxxxxx1&message_thread_id=12")
# For silent notifications, you can add the modifier '&silent=true' (e.g. "-100xxxxxxxxx1&silent=true")
## This is an array
telegramChannelId=("")

# Do you want to send a Telegram message for script errors? Beware, the script is not capable of checking
# to see if an error message has already been sent, so depending on your cron settings this could become
# very spammy. Can be "Yes" "No" "True" "False"
## This is a string
telegramErrorMessages="Yes"

# If you enabled Telegram messages for script errors, you can define a different channel for errors to
# be sent to, instead of the ones defined in the 'telegramChannelId' array above. This can only be a single
# channel, not an array. If you leave this blank, and have error messages enabled, then they will send to
# all channels in the 'telegramChannelId' array above.
## This is a string
telegramErrorChannel=""
